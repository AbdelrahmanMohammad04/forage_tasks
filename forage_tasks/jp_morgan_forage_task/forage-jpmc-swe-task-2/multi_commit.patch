From 8ae982eac2695411ba249229f08c52a3d8dc1602 Mon Sep 17 00:00:00 2001
From: Abdelrahman Mohammad
 <51163783+AbdelrahmanMohammad04@users.noreply.github.com>
Date: Tue, 20 Jun 2023 16:02:48 -0500
Subject: [PATCH 1/2] changed App.tsx and Graph.tsx to create a graph that
 displays stock

---
 src/App.tsx   | 22 +++++++++++++++++++---
 src/Graph.tsx | 13 +++++++++++--
 2 files changed, 30 insertions(+), 5 deletions(-)

diff --git a/src/App.tsx b/src/App.tsx
index 0728518..c0031f5 100755
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -8,6 +8,7 @@ import './App.css';
  */
 interface IState {
   data: ServerRespond[],
+  showGraph: boolean,
 }
 
 /**
@@ -22,6 +23,7 @@ class App extends Component<{}, IState> {
       // data saves the server responds.
       // We use this state to parse data down to the child element (Graph) as element property
       data: [],
+      showGraph: false,
     };
   }
 
@@ -29,7 +31,9 @@ class App extends Component<{}, IState> {
    * Render Graph react component with state.data parse as property data
    */
   renderGraph() {
-    return (<Graph data={this.state.data}/>)
+    if (this.state.showGraph === true) {
+      return (<Graph data={this.state.data}/>)
+    }
   }
 
   /**
@@ -39,8 +43,20 @@ class App extends Component<{}, IState> {
     DataStreamer.getData((serverResponds: ServerRespond[]) => {
       // Update the state by creating a new array of data that consists of
       // Previous data in the state and the new data from server
-      this.setState({ data: [...this.state.data, ...serverResponds] });
-    });
+      let x = 0
+      const interval = setInterval(() => {
+        DataStreamer.getData((serverResponds: ServerRespond[]) => {
+          this.setState({
+            data: serverResponds,
+            showGraph: true,
+          })
+        })
+        x++
+        if (x > 1000) {
+          clearInterval(interval)
+        }
+      }, 100)
+    })
   }
 
   /**
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 3b2a7da..80ed47d 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -14,7 +14,7 @@ interface IProps {
  * Perspective library adds load to HTMLElement prototype.
  * This interface acts as a wrapper for Typescript compiler.
  */
-interface PerspectiveViewerElement {
+interface PerspectiveViewerElement extends HTMLElement {
   load: (table: Table) => void,
 }
 
@@ -32,7 +32,7 @@ class Graph extends Component<IProps, {}> {
 
   componentDidMount() {
     // Get element to attach the table from the DOM.
-    const elem: PerspectiveViewerElement = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
+    const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
       stock: 'string',
@@ -48,6 +48,15 @@ class Graph extends Component<IProps, {}> {
       // Load the `table` in the `<perspective-viewer>` DOM reference.
 
       // Add more Perspective configurations here.
+      elem.setAttribute('view', 'y_line')
+      elem.setAttribute('column-pivots', '["stock"]')
+      elem.setAttribute('row-pivots', '["timestamp"]')
+      elem.setAttribute('column', '["top_ask_price"]')
+      elem.setAttribute('aggregates', `
+        {"stock":"distinct count",
+        "top_ask_price":"avg",
+        "top_bid_price":"avg",
+        "timestamp":"distinct count"}`)
       elem.load(this.table);
     }
   }
-- 
2.39.0.windows.1


From a6a7143559767ae58a804c4e95779b14fb9db397 Mon Sep 17 00:00:00 2001
From: Abdelrahman Mohammad
 <51163783+AbdelrahmanMohammad04@users.noreply.github.com>
Date: Tue, 20 Jun 2023 16:05:04 -0500
Subject: [PATCH 2/2] fixed bug with Graph.tsx

---
 src/Graph.tsx | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/Graph.tsx b/src/Graph.tsx
index 80ed47d..23a409c 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -51,7 +51,7 @@ class Graph extends Component<IProps, {}> {
       elem.setAttribute('view', 'y_line')
       elem.setAttribute('column-pivots', '["stock"]')
       elem.setAttribute('row-pivots', '["timestamp"]')
-      elem.setAttribute('column', '["top_ask_price"]')
+      elem.setAttribute('columns', '["top_ask_price"]')
       elem.setAttribute('aggregates', `
         {"stock":"distinct count",
         "top_ask_price":"avg",
-- 
2.39.0.windows.1

